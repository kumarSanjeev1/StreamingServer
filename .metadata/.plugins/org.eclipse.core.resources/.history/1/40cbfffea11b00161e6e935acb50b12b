package com.blah.client.logger;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.Socket;
import java.util.concurrent.Callable;

public class StreamingHandler implements Runnable {

	
	private static final int MAX_OFFSET = 10000;
	private final String fileName;
	private final Socket serverSocket;
	private volatile int lastOffset;
	private volatile  FileInputStream fis;
	public StreamingHandler(String fileName, Socket serverSocket, int lastOffset){
		this.fileName=fileName;
		this.serverSocket=serverSocket;
		this.lastOffset=lastOffset;
		try {
			this.fis= new FileInputStream(LogManager.getLogLocation()+File.separatorChar+fileName);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	@Override
	public void run()  {
		try {
			if(lastOffset > MAX_OFFSET){
				return ;
			}
			byte[] bytesRead= new byte[1000];
			//System.out.println("Clinet going to read bytes");
			int totalRead= fis.read(bytesRead, 0, bytesRead.length);
			//System.out.println("CLient read bytes "+totalRead);
			if(totalRead !=-1){
				//Write to Socket
				serverSocket.getOutputStream().write(bytesRead);
				lastOffset+=totalRead;
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	

}
